---
import { client } from "../lib/microcms";

let apiInfo = {
  clientStatus: "Not initialized",
  apis: [],
  error: null,
};

try {
  if (client) {
    apiInfo.clientStatus = "Initialized";

    // 利用可能なAPIを確認（実際のAPI名に変更してください）
    const apis = [
      "blog",
      "blogs",
      "categories",
      "news",
      "banners",
      "about",
      "article",
      "articles",
    ]; // 複数の可能性をテスト

    for (const api of apis) {
      try {
        let response;
        if (api === "about") {
          // About APIはオブジェクト形式なのでgetObjectを使用
          response = await client.getObject({
            endpoint: api,
            queries: {},
          });
          apiInfo.apis.push({
            name: api,
            status: "OK",
            totalCount: response ? 1 : 0,
            fields: response ? Object.keys(response) : [],
          });
        } else {
          // その他のAPIはリスト形式なのでgetを使用
          response = await client.get({
            endpoint: api,
            queries: { limit: 1 },
          });
          apiInfo.apis.push({
            name: api,
            status: "OK",
            totalCount: response.totalCount || 0,
            fields: response.contents?.[0]
              ? Object.keys(response.contents[0])
              : [],
          });
        }
      } catch (error) {
        apiInfo.apis.push({
          name: api,
          status: "Error",
          error: error.message,
        });
      }
    }
  } else {
    apiInfo.error = "Client not initialized - check environment variables";
  }
} catch (error) {
  apiInfo.error = error.message;
}
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>API Debug - microCMS接続確認</title>
    <style>
      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        background: #f5f5f5;
      }
      .debug-container {
        background: white;
        border-radius: 8px;
        padding: 2rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
      .status {
        padding: 1rem;
        border-radius: 4px;
        margin: 1rem 0;
      }
      .status.success {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
      }
      .status.error {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
      }
      .api-list {
        margin: 1rem 0;
      }
      .api-item {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        padding: 1rem;
        margin: 0.5rem 0;
      }
      .api-item.success {
        border-color: #28a745;
      }
      .api-item.error {
        border-color: #dc3545;
      }
      .field-list {
        font-size: 0.9rem;
        color: #666;
        margin-top: 0.5rem;
      }
      pre {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 4px;
        overflow-x: auto;
      }
    </style>
  </head>
  <body>
    <div class="debug-container">
      <h1>microCMS API接続確認</h1>

      <div
        class={`status ${apiInfo.clientStatus === "Initialized" ? "success" : "error"}`}
      >
        <strong>クライアント状態:</strong>
        {apiInfo.clientStatus}
      </div>

      {
        apiInfo.error && (
          <div class="status error">
            <strong>エラー:</strong> {apiInfo.error}
          </div>
        )
      }

      <h2>API一覧</h2>
      <div class="api-list">
        {
          apiInfo.apis.map((api) => (
            <div
              class={`api-item ${api.status === "OK" ? "success" : "error"}`}
            >
              <h3>{api.name}</h3>
              <p>
                <strong>状態:</strong> {api.status}
              </p>
              {api.totalCount !== undefined && (
                <p>
                  <strong>総数:</strong> {api.totalCount}件
                </p>
              )}
              {api.fields && api.fields.length > 0 && (
                <div class="field-list">
                  <strong>フィールド:</strong> {api.fields.join(", ")}
                </div>
              )}
              {api.error && (
                <p>
                  <strong>エラー:</strong> {api.error}
                </p>
              )}
            </div>
          ))
        }
      </div>

      <h2>環境変数確認</h2>
      <pre>
PUBLIC_MICROCMS_SERVICE_DOMAIN: {import.meta.env.PUBLIC_MICROCMS_SERVICE_DOMAIN ? '[SET]' : '[NOT SET]'}
PUBLIC_MICROCMS_API_KEY: {import.meta.env.PUBLIC_MICROCMS_API_KEY ? '[SET]' : '[NOT SET]'}
    </pre>
    </div>
  </body>
</html>
