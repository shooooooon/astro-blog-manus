---
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE } from "../../consts";
import { client, getBlogs, type Blog } from "../../lib/microcms";

let posts: Blog[] = [];
let categories: { [key: string]: number } = {};

try {
  if (!client) {
    throw new Error(
      "microCMSクライアントの設定ができていません。環境変数を確認してください。"
    );
  }
  const response = await getBlogs();
  posts = response.contents;

  // カテゴリを集計
  posts.forEach((post) => {
    if (post.category) {
      const categoryName = post.category.name;
      categories[categoryName] = (categories[categoryName] || 0) + 1;
    }
  });
} catch (error) {
  console.error("microCMSからのデータ取得に失敗しました:", error);
}
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead
      title={`カテゴリ一覧 | ${SITE_TITLE}`}
      description="ブログのカテゴリ一覧"
    />
    <style>
      body {
        background-color: #fafafa;
        color: #1a1a1a;
        line-height: 1.7;
      }

      main {
        max-width: 800px;
        margin: 0 auto;
        padding: 3rem 2rem;
      }

      .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1a1a1a;
        margin-bottom: 3rem;
        text-align: center;
        letter-spacing: -0.02em;
      }

      .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
        margin-bottom: 3rem;
      }

      .category-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: block;
      }

      .category-card:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
      }

      .category-name {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1a1a1a;
        margin-bottom: 0.5rem;
      }

      .category-count {
        color: #64748b;
        font-size: 0.9rem;
        font-weight: 500;
      }

      .no-categories {
        text-align: center;
        color: #64748b;
        margin-top: 4rem;
        padding: 3rem;
        background: white;
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .no-categories p {
        font-size: 1.1rem;
        margin: 0;
      }

      @media (max-width: 768px) {
        main {
          padding: 2rem 1rem;
        }

        .page-title {
          font-size: 2rem;
          margin-bottom: 2rem;
        }

        .categories-grid {
          grid-template-columns: 1fr;
          gap: 1.5rem;
        }

        .category-card {
          padding: 1.5rem;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <h1 class="page-title">カテゴリ一覧</h1>

      {
        Object.keys(categories).length === 0 ? (
          <div class="no-categories">
            <p>カテゴリが設定されていません。</p>
          </div>
        ) : (
          <div class="categories-grid">
            {Object.entries(categories).map(([categoryName, count]) => (
              <a
                href={`/categories/${encodeURIComponent(categoryName)}`}
                class="category-card"
              >
                <div class="category-name">{categoryName}</div>
                <div class="category-count">{count}件の記事</div>
              </a>
            ))}
          </div>
        )
      }
    </main>
    <Footer />
  </body>
</html>
