---
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE } from "../../consts";
import { client, getBlogs, type Blog } from "../../lib/microcms";

export async function getStaticPaths() {
  if (!client) return [];

  const response = await getBlogs();
  const categories = new Set<string>();

  response.contents.forEach((post: Blog) => {
    if (post.category) {
      categories.add(post.category.name);
    }
  });

  return Array.from(categories).map((category) => ({
    params: { category },
    props: { category },
  }));
}

const { category } = Astro.params;
let posts: Blog[] = [];
let categoryPosts: Blog[] = [];

try {
  if (!client) {
    throw new Error(
      "microCMSクライアントの設定ができていません。環境変数を確認してください。"
    );
  }
  const response = await getBlogs();
  posts = response.contents;

  // 指定されたカテゴリの記事をフィルタリング
  categoryPosts = posts.filter(
    (post) => post.category && post.category.name === category
  );
} catch (error) {
  console.error("microCMSからのデータ取得に失敗しました:", error);
}
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead
      title={`${category} | ${SITE_TITLE}`}
      description={`${category}カテゴリの記事一覧`}
    />
    <style>
      body {
        background-color: #fafafa;
        color: #1a1a1a;
        line-height: 1.7;
      }

      main {
        max-width: 800px;
        margin: 0 auto;
        padding: 3rem 2rem;
      }

      .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1a1a1a;
        margin-bottom: 1rem;
        text-align: center;
        letter-spacing: -0.02em;
      }

      .category-info {
        text-align: center;
        color: #64748b;
        margin-bottom: 3rem;
        font-size: 1.1rem;
      }

      .posts-list {
        display: flex;
        flex-direction: column;
        gap: 3rem;
      }

      .post-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .post-card:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
      }

      .post-card a {
        text-decoration: none;
        color: inherit;
        display: block;
      }

      .eyecatch {
        width: 100%;
        height: 240px;
        object-fit: cover;
      }

      .post-content-wrapper {
        padding: 2rem;
      }

      .post-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1a1a1a;
        margin-bottom: 0.75rem;
        line-height: 1.3;
        letter-spacing: -0.01em;
      }

      .post-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        color: #64748b;
      }

      .post-date {
        font-weight: 500;
      }

      .post-category {
        background: #4f46e5;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
      }

      .post-excerpt {
        color: #4b5563;
        line-height: 1.7;
        font-size: 1rem;
      }

      .no-posts {
        text-align: center;
        color: #64748b;
        margin-top: 4rem;
        padding: 3rem;
        background: white;
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .no-posts p {
        font-size: 1.1rem;
        margin: 0;
      }

      .back-to-categories {
        text-align: center;
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid rgba(0, 0, 0, 0.08);
      }

      .back-to-categories a {
        color: #4f46e5;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.2s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
      }

      .back-to-categories a:hover {
        color: #3730a3;
      }

      @media (max-width: 768px) {
        main {
          padding: 2rem 1rem;
        }

        .page-title {
          font-size: 2rem;
          margin-bottom: 1rem;
        }

        .posts-list {
          gap: 2rem;
        }

        .post-content-wrapper {
          padding: 1.5rem;
        }

        .post-title {
          font-size: 1.25rem;
        }

        .eyecatch {
          height: 200px;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <h1 class="page-title">{category}</h1>
      <div class="category-info">
        {categoryPosts.length}件の記事
      </div>

      {
        categoryPosts.length === 0 ? (
          <div class="no-posts">
            <p>このカテゴリには記事がありません。</p>
          </div>
        ) : (
          <div class="posts-list">
            {categoryPosts.map((post) => (
              <article class="post-card">
                <a href={`/blog/${post.id}`}>
                  {post.eyecatch && (
                    <img
                      src={post.eyecatch.url}
                      alt={post.title}
                      class="eyecatch"
                    />
                  )}
                  <div class="post-content-wrapper">
                    <h2 class="post-title">{post.title}</h2>
                    <div class="post-meta">
                      <time class="post-date">
                        {new Date(post.publishedAt).toLocaleDateString(
                          "ja-JP",
                          {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          }
                        )}
                      </time>
                      {post.category && (
                        <span class="post-category">{post.category.name}</span>
                      )}
                    </div>
                    <div class="post-excerpt">
                      <p>
                        {post.content.replace(/<[^>]*>/g, "").substring(0, 120)}
                        ...
                      </p>
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>
        )
      }

      <div class="back-to-categories">
        <a href="/categories/">← カテゴリ一覧に戻る</a>
      </div>
    </main>
    <Footer />
  </body>
</html>
