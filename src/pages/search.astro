---
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { SITE_TITLE } from "../consts";
import { client, getBlogs, type Blog } from "../lib/microcms";

let posts: Blog[] = [];
let searchResults: Blog[] = [];
let searchQuery = "";

// URLパラメータから検索クエリを取得
const url = new URL(Astro.request.url);
searchQuery = url.searchParams.get("q") || "";

try {
  if (!client) {
    throw new Error(
      "microCMSクライアントの設定ができていません。環境変数を確認してください。"
    );
  }
  const response = await getBlogs();
  posts = response.contents;

  // 検索実行
  if (searchQuery) {
    searchResults = posts.filter(
      (post) =>
        post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        post.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
        (post.category &&
          post.category.name.toLowerCase().includes(searchQuery.toLowerCase()))
    );
  }
} catch (error) {
  console.error("microCMSからのデータ取得に失敗しました:", error);
}
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead
      title={`検索結果 | ${SITE_TITLE}`}
      description="ブログ記事の検索結果"
    />
    <style>
      body {
        background-color: #fafafa;
        color: #1a1a1a;
        line-height: 1.7;
      }

      main {
        max-width: 800px;
        margin: 0 auto;
        padding: 3rem 2rem;
      }

      .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1a1a1a;
        margin-bottom: 3rem;
        text-align: center;
        letter-spacing: -0.02em;
      }

      .search-form {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 3rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .search-input-group {
        display: flex;
        gap: 1rem;
        align-items: center;
      }

      .search-input {
        flex: 1;
        padding: 1rem;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-size: 1rem;
        transition: border-color 0.2s ease;
      }

      .search-input:focus {
        outline: none;
        border-color: #4f46e5;
      }

      .search-button {
        padding: 1rem 2rem;
        background: #4f46e5;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.2s ease;
      }

      .search-button:hover {
        background: #3730a3;
      }

      .search-results-info {
        color: #64748b;
        margin-bottom: 2rem;
        font-size: 1.1rem;
      }

      .search-results {
        display: flex;
        flex-direction: column;
        gap: 2rem;
      }

      .post-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .post-card:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
      }

      .post-card a {
        text-decoration: none;
        color: inherit;
        display: block;
      }

      .eyecatch {
        width: 100%;
        height: 200px;
        object-fit: cover;
      }

      .post-content-wrapper {
        padding: 2rem;
      }

      .post-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1a1a1a;
        margin-bottom: 0.75rem;
        line-height: 1.3;
        letter-spacing: -0.01em;
      }

      .post-meta {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        color: #64748b;
      }

      .post-date {
        font-weight: 500;
      }

      .post-category {
        background: #4f46e5;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
      }

      .post-excerpt {
        color: #4b5563;
        line-height: 1.7;
        font-size: 1rem;
      }

      .highlight {
        background: #fef3c7;
        padding: 0.1rem 0.2rem;
        border-radius: 3px;
      }

      .no-results {
        text-align: center;
        color: #64748b;
        margin-top: 4rem;
        padding: 3rem;
        background: white;
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.05);
      }

      .no-results p {
        font-size: 1.1rem;
        margin: 0;
      }

      @media (max-width: 768px) {
        main {
          padding: 2rem 1rem;
        }

        .page-title {
          font-size: 2rem;
          margin-bottom: 2rem;
        }

        .search-form {
          padding: 1.5rem;
        }

        .search-input-group {
          flex-direction: column;
          gap: 1rem;
        }

        .search-button {
          width: 100%;
        }

        .post-content-wrapper {
          padding: 1.5rem;
        }

        .post-title {
          font-size: 1.25rem;
        }

        .eyecatch {
          height: 180px;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <h1 class="page-title">記事検索</h1>

      <div class="search-form">
        <form method="GET" action="/search">
          <div class="search-input-group">
            <input
              type="text"
              name="q"
              class="search-input"
              placeholder="記事を検索..."
              value={searchQuery}
              required
            />
            <button type="submit" class="search-button">検索</button>
          </div>
        </form>
      </div>

      {
        searchQuery && (
          <>
            <div class="search-results-info">
              「{searchQuery}」の検索結果: {searchResults.length}件
            </div>

            {searchResults.length === 0 ? (
              <div class="no-results">
                <p>検索条件に一致する記事が見つかりませんでした。</p>
              </div>
            ) : (
              <div class="search-results">
                {searchResults.map((post) => (
                  <article class="post-card">
                    <a href={`/blog/${post.id}`}>
                      {post.eyecatch && (
                        <img
                          src={post.eyecatch.url}
                          alt={post.title}
                          class="eyecatch"
                        />
                      )}
                      <div class="post-content-wrapper">
                        <h2 class="post-title">{post.title}</h2>
                        <div class="post-meta">
                          <time class="post-date">
                            {new Date(post.publishedAt).toLocaleDateString(
                              "ja-JP",
                              {
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                              }
                            )}
                          </time>
                          {post.category && (
                            <span class="post-category">
                              {post.category.name}
                            </span>
                          )}
                        </div>
                        <div class="post-excerpt">
                          <p>
                            {post.content
                              .replace(/<[^>]*>/g, "")
                              .substring(0, 120)}
                            ...
                          </p>
                        </div>
                      </div>
                    </a>
                  </article>
                ))}
              </div>
            )}
          </>
        )
      }
    </main>
    <Footer />
  </body>
</html>
